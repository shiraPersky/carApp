generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Service {
  id                 Int      @id @default(autoincrement())
  license_plate   String   // Car number (license plate)
  car_id             Int
  service_type       String
  date               DateTime
  time               String
  odometer           Int
  place              String
  driver             String
  paymentMethod      String
  file_attachment    String?
  cost               Float
  notes              String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model Refueling {
  id             Int      @id @default(autoincrement())
  license_plate   String  // Car number (license plate)
  date           DateTime
  time           String
  odometer       Int
  kindOfFuel     String
  pricePerLiter  Float
  totalCost      Float
  liters         Float
  gasStation     String
  driver         String
  fileAttachment String?
  notes          String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Car {
  id              Int      @id @default(autoincrement())  // Unique identifier for the car
  license_plate   String   @unique  // Car number (license plate)
  make            String   // Car brand (e.g., Toyota)
  model           String   // Car model (e.g., Corolla)
  year            Int      // Year of manufacture
  color           String   // Color of the car
  emission_group  String?  // Infection group (emission classification, optional)
  valid_until     DateTime // Validity of the license (license expiration)
  trim_level      String?  // Finish level (trim level of the car, optional)
  last_test       DateTime // Last test date
  model_type      String   // Model type (private or commercial)
  model_number    String   // Model number of the car
  odometer        Int      @default(0) // Main odometer value
  created_at      DateTime @default(now())  // Timestamp when car was added
  updated_at      DateTime @updatedAt  // Timestamp for last update
}

